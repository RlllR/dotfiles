[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_add = '''
	if dein#_is_windows()
		let cmd = 'tools\\update-dll-mingw'
	elseif dein#util#_is_cygwin()
		let cmd = 'make -f make_cygwin.mak'
	elseif executable('gmake')
		let cmd = 'gmake'
	else
		let cmd = 'make'
	endif
	let g:dein#plugin.build = cmd
'''

# ブランチ・タグ指定
[[plugins]]
repo = 'delphinus35/typescript-vim'
rev  = 'colorize-template-strings'

# 特定条件
[[plugins]]
repo = 'elzr/vim-json'
if = '''! has('kaoriya')'''
hook_add = 'let g:vim_json_syntax_conceal = 0'

# 依存関係
[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']
hook_add = '''
	set laststatus=2
	let g:airline_theme = 'deus'
	let g:airline_powerline_fonts = 1
	let g:airline#extensions#tabline#buffer_idx_mode = 1
	let g:airline#extensions#virtualenv#enabled = 1
	let g:airline#extensions#whitespace#mixed_indent_algo = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
	if !exists('g:quidkrun_config')
		let g:quickrun_config = {}
	endif
	let g:quickrun_config['watchdogs_checker/'] = {
		\ 'outputter/quickfix/open_cmd' : '',
		\ 'hook/qfstatusline_update/enable_exit' : 1,
		\ 'hook/qfstatusline_update/priority_exit' : 4,
		\}
'''

[[plugins]]
repo = 'osyo-manga/vim-watchdogs'
depends = [
  'jceb/vim-hier',
  'dannyob/quickfixstatus',
  'osho-manga/shabadou.vim',
  'thinca/vim-quickrun',
]
on_event = ['FocusLost', 'CursorHold']
hook_add = '''
    let g:watchdogs_check_BufWritePost_enable = 0
    let g:watchdogs_check_CursorHold_enable = 0
    let g:watchdogs_check_BufWritePost_enable_on_wq = 0

	let g:quickrun_config = get(g:, 'quickrun_config', {})
	let g:quickrun_config['watchdogs_checker/_'] = {
        \ 'outputter/quickfix/open_cmd': '',
        \ 'hook/qfsigns_update/enable_exit': 1,
        \ 'hook/qfsigns_update/priority_exit': 3
        \ }
    let phpcs_command = "phpcs"
    if executable(phpcs_command)
        let error_format =
            \ '%-GFile\,Line\,Column\,Type\,Message\,Source\,Severity%.%#,'.
            \ '"%f"\,%l\,%c\,%t%*[a-zA-Z]\,"%m"\,%*[a-zA-Z0-9_.-]\,%*[0-9]%.%#'

        let g:quickrun_config["watchdogs_checker/phpcs"] = {
            \ "quickfix/errorformat": error_format,
            \ "command" : phpcs_command,
            \ "cmdopt" : "--report=csv --standard=ruleset.xml",
            \ "exec" : '%c %o %s:p',
            \ }

        unlet phpcs_command
        unlet error_format

        let g:quickrun_config["php/watchdogs_checker"] = {
            \ "type" : "watchdogs_checker/phpcs",
            \ }
    endif

	let g:quickrun_config['watchdogs_checker/jshint'] = {'cmdopt': '--config `/.jshintrc'}
'''
hook_post_source = '''
	call watchdogs#setup(g:quickrun_config)
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    let g:NERDTreeShowHidden = 1
    let g:NERDTreeShowBookmarks = 1
    let file_name = expand("%:p")
    nnoremap <silent><C-e> : NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
    nnoremap <silent> ,gg :<C-u>GitGutterToggle<CR>
    nnoremap <silent> ,gt :<C-u>GitGutterlineHighlightsToggle<CR>
'''

# シンタックスチェック系
[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

# colorscheme
[[plugins]]
repo = 'w0ng/vim-hybrid'
#[[plugins]]
repo = 'tomasr/molokai'
[[plugins]]
repo = 'raphamorim/lucario'
[[plugins]]
repo = 'jdkanani/vim-material-theme'
[[plugins]]
repo = 'jacoborus/tender.vim'
