# Ctrl-j でコマンドモードに
unbind C-j
set -g prefix C-j
bind C-j send-prefix

# tmux内のvimで256色を設定する
set -g default-terminal "xterm-256color"

set -g history-limit 50000
# set -g default-shell /usr/bin/zsh
set -g escape-time 0

#
# Plugins
#
set -g @tpm_plugins '             \
  tmux-plugins/tpm                \
  tmux-plugins/tmux-sensible      \
  tmux-plugins/tmux-yank          \
  tmux-plugins/tmux-open          \
  tmux-plugins/tmux-resurrect     \
  tmux-plugins/tmux-continuum     \
  tmux-plugins/tmux-battery       \
  tmux-plugins/tmux-pain-control  \
  tmux-plugins/tmux-online-status \
  tmux-plugins/tmux-cpu           \
'
run-shell '~/.tmux/plugins/tpm/tpm'

#
# Status Bar
#
# set -g status-utf8 on # ステータスバーをutf-8に対応
set -g status-position top   # ステータスバーをトップに配置
set -g status-left-length 90 # 左右のステータスバーの長さを決定
set -g status-left '#[fg=color255,bg=color241]Session: #S #[default]'
set -g status-right-length 190 # 左右のステータスバーの長さを決定

set -g status-right '\
Batt: #{battery_percentage} |\
Online: #{online_status} |\
CPU: #{cpu_cpu_percentage} |\
MEM: #{mem} |\
 %Y-%m-%d(%a) %H:%M:%S  \
'
set -g status-interval 1 # ステータスバーを1秒毎に描画
set -g status-justify centre

#
# Color
#
set -g status-style bg="green","default",fg="yellow"

# default window title colors
setw -g window-status-style bg="default",fg="brightblue"

# active window title colors
# setw -g window-status-current-style fg="bright","bright"
setw -g window-status-current-style fg='#8fa1b3',bold,bg=default

# pane border
set -g pane-border-style fg="black"
set -g pane-active-border-style fg="brightgreen" #base01

# message text
# set -g message-bg black #base02 #TODO
# set -g message-fg brightred #orange #TODO
set -g message-style fg="black",bg="brightred"

# pane number display
set -g display-panes-active-colour blue #blue
set -g display-panes-colour brightred #orange

# clock
set-window -g clock-mode-colour green #green


# key-bind

# Vi キーバインド
setw -g mode-keys vi

bind C-v copy-mode \; display "Copy mode"

# vim <=> tmux 間でクリップボード利用可能
set -g default-command 'which reattach-to-user-namespace > /dev/null 2>&1 && reattach-to-user-namespace -l $SHELL || $SHELL'

# Prefix+p でペースト
# クリップボードにも保存されているのでCtrl-v でもペースト可能
bind p paste-buffer

## copy-mode
# Prefix+Enter/y でコピー
bind -T copy-mode Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode y send -X copy-pipe-and-candel "reattach-to-user-namespace pbcopy"

# コピーモード中 v で選択
bind -T copy-mode v send -X begin-selection
# コピーモード中 C-v で矩形選択開始
bind -T copy-mode C-v send -X rectangle-toggle
# 1行選択
bind -T copy-mode Y send -X select-line

# Vi モード中に Ctrl-a で行頭に（Emacs ライク）
bind -T copy-mode C-a send -X start-of-line
# Vi モード中に Ctrl-e で行末に（Emacs ライク）
bind -T copy-mode C-e send -X end-of-line

# 単語の最初の1文字に移動
bind -T copy-mode w send -X next-word
# 単語の最後の1文字に移動
bind -T copy-mode e send -X next-word-end
# w の逆の動き back
bind -T copy-mode b send -X previous-word

# 画面上に映る最上行に移動
bind -T copy-mode g send -X top-line
# 画面上に映る最下行に移動
bind -T copy-mode G send -X bottom-line

# 前方検索
bind -T copy-mode / send -X search-forward
# 後方検索
bind -T copy-mode ? send -X search-backward

# ページ送り
bind -T copy-mode C-u send -X scroll-up
bind -T copy-mode C-d send -X scroll-down

# Window & Pane
#
# ウィンドウとペインの番号を1から開始(デフォルト0)
set -g base-index 1
set-window -g pane-base-index 1

# Create new Window
bind C-c new-window -n zsh

# Create new Pane
# Prefix + - で横に Prefix + |  で縦に分割(ペイン)する
bind C-s split-window -h
bind C-i split-window -v

# Prefix + Ctrl-j/l でウィンドウ切り替え
# Prefix + Ctrl-j,j,j,j,j,..... 連打可能
bind -r C-j select-window -t :-
bind -r C-k select-window -t :+

# Prefix + hjkl でペイン移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ペインサイズを上下左右(Prefix + JKHL)に変更
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5


# Ctrl-o でペインをローテーションしながら移動
bind -n C-o select-pane -t :.+

# pane入力同期
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Other
# prefix + r で設定ファイル再読み込み
unbind C-r
bind C-r source-file ~/.tmux.conf \; display-message "tmux reloaded."

# C-j Insert でmain-vertical レイアウトのまま、新しいペインを生成
bind IC run-shell "sh -c \"tmux split-window -v -t 0 \\\"$( tmux list-panes -F '#{pane_active} #{pane_start_command}' | egrep ^1 | sed 's/^1 //' )\\\" \\; select-layout main-vertical \""

# C-j Delete でウィンドウを強制終了
bind DC confirm-before -p "kill-window #W? (y/n)" kill-window

# 保存(C-S)/復元(C-R)
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# 定期保存(60分)
set -g @continuum-save-interval '60'

# 起動時に自動復元
set -g @continuum-restore 'on'
